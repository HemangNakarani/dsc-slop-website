{"version":3,"sources":["Pages/HomePage.js","components/LeaderBoardEntry.js","components/LeaderBoardTable.js","Pages/LeaderBoard.js","components/Project.js","Pages/Projects.js","components/NavBar.js","App.js","index.js"],"names":["HomePage","to","StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","StyledTableCell","body","fontSize","TableCell","LeaderBoardEntry","rank","username","points","pull_requests","align","component","scope","head","primary","main","color","common","white","useStyles","makeStyles","table","minWidth","useStyles1","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","useTheme","count","page","rowsPerPage","onChangePage","className","IconButton","onClick","event","disabled","aria-label","direction","Math","ceil","max","LeaderBoardTable","useState","users","setUsers","React","setPage","setRowsPerPage","loaded","setLoaded","useEffect","a","axios","get","response","usersList","data","user","fetchData","Grid","container","justify","alignItems","style","height","textAlign","item","CircularProgress","size","xs","sm","Grow","in","TableContainer","Paper","Table","TableHead","TableBody","slice","map","row","index","pull_request","key","TableFooter","TablePagination","rowsPerPageOptions","label","value","colSpan","length","SelectProps","inputProps","native","newPage","console","log","onChangeRowsPerPage","parseInt","target","ActionsComponent","LeaderBoard","paper","padding","minHeight","title","getColor","id","Project","mentors","url","loading","setLoading","projecttitle","description","lastUpdated","contributors","info","setInfo","modifiedurl","replace","then","modified_data","name","updated_at","contributors_url","variant","href","GitHub","Typography","overflow","textOverflow","moment","fromNow","Group","Projects","setData","projects","Container","obj","project","md","grow","flexGrow","marginBottom","textDecoration","menu","menuButton","paddingRight","logo","display","sectionDesktop","breakpoints","up","sectionMobile","PrimarySearchAppBar","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","handleMobileMenuClose","renderMobileMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","currentTarget","aria-controls","aria-haspopup","AppBar","position","Toolbar","noWrap","edge","App","path","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.10d12315.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from '@reach/router';\n\nexport default function HomePage() {\n  return (\n    <>\n      <div>This is HomePage Page! </div>\n      <Link to={'/leaderboard'}>\n        <div>Link to leaderboards!</div>\n      </Link>\n\n      <Link to={'/projects'}>\n        <div>Link to Projects!</div>\n      </Link>\n    </>\n  );\n}\n","import React from 'react';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    body: {\r\n        fontSize: 16,\r\n    }\r\n}))(TableCell);\r\n\r\nconst LeaderBoardEntry = ({ rank, username, points, pull_requests }) => {\r\n    return (\r\n        <StyledTableRow>\r\n            <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                {rank}\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"center\">{username}</StyledTableCell>\r\n            <StyledTableCell align=\"center\">{points}</StyledTableCell>\r\n            <StyledTableCell align=\"center\">{pull_requests}</StyledTableCell>\r\n        </StyledTableRow>\r\n    );\r\n}\r\n\r\nexport default LeaderBoardEntry;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport { withStyles, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\n\r\nimport LeaderBoardEntry from './LeaderBoardEntry';\r\nimport { TableBody } from '@material-ui/core';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 350,\r\n    },\r\n});\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n    root: {\r\n        flexShrink: 0,\r\n        marginLeft: theme.spacing(2.5),\r\n    },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n    const classes = useStyles1();\r\n    const theme = useTheme();\r\n    const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n    const handleFirstPageButtonClick = (event) => {\r\n        onChangePage(event, 0);\r\n    };\r\n\r\n    const handleBackButtonClick = (event) => {\r\n        onChangePage(event, page - 1);\r\n    };\r\n\r\n    const handleNextButtonClick = (event) => {\r\n        onChangePage(event, page + 1);\r\n    };\r\n\r\n    const handleLastPageButtonClick = (event) => {\r\n        onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <IconButton\r\n                onClick={handleFirstPageButtonClick}\r\n                disabled={page === 0}\r\n                aria-label=\"first page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n            </IconButton>\r\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleNextButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"next page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </IconButton>\r\n            <IconButton\r\n                onClick={handleLastPageButtonClick}\r\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n                aria-label=\"last page\"\r\n            >\r\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst LeaderBoardTable = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(8);\r\n    const [loaded, setLoaded] = React.useState(false);\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        console.log(newPage);\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await axios.get(\"https://script.google.com/macros/s/AKfycbxAfEhHRFKiwJ05oG1Zw4vF5sXqdnXKm2d6NP3QrF7C3oIhbxY/exec\");\r\n            let usersList = response.data.user;\r\n            setUsers(usersList);\r\n            setLoaded(true);\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n    if (loaded === false) {\r\n        return (\r\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\" style={{ height: '100vh', textAlign: \"center\" }}>\r\n                <Grid item>\r\n                    <CircularProgress size={100} />\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\r\n                <Grid item xs={12} sm={12}>\r\n                    <Grow in={true}>\r\n                        <TableContainer component={Paper}>\r\n                            <Table className={classes.table} aria-label=\"customized table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <StyledTableCell align=\"center\">Rank</StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">Username</StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">Points</StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">Pull Requests</StyledTableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {\r\n                                        (rowsPerPage > 0 ? users.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : users)\r\n                                            .map((row, index) => {\r\n                                                return <LeaderBoardEntry\r\n                                                    rank={page * rowsPerPage + index + 1}\r\n                                                    username={row.username}\r\n                                                    points={row.points}\r\n                                                    pull_requests={row.pull_request}\r\n                                                    key={row.username}\r\n                                                />\r\n                                            })\r\n                                    }\r\n                                </TableBody>\r\n                                <TableFooter>\r\n                                    <TableRow>\r\n                                        <TablePagination\r\n                                            rowsPerPageOptions={[8, 20, 30, { label: 'All', value: -1 }]}\r\n                                            colSpan={3}\r\n                                            count={users.length}\r\n                                            rowsPerPage={rowsPerPage}\r\n                                            page={page}\r\n                                            SelectProps={{\r\n                                                inputProps: { 'aria-label': 'rows per page' },\r\n                                                native: true,\r\n                                            }}\r\n                                            onChangePage={handleChangePage}\r\n                                            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                            ActionsComponent={TablePaginationActions}\r\n                                        />\r\n                                    </TableRow>\r\n                                </TableFooter>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Grow>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LeaderBoardTable;","import React from 'react';\nimport LeaderBoardTable from '../components/LeaderBoardTable';\n\nconst LeaderBoard = () => {\n  return <LeaderBoardTable />;\n};\n\nexport default LeaderBoard;\n","import React,{useEffect,useState} from 'react';\nimport {makeStyles,Paper,Grid,Typography,IconButton,CircularProgress} from '@material-ui/core';\nimport {GitHub, Group} from '@material-ui/icons';\nimport axios from 'axios';\nimport moment from 'moment';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        minHeight:\"25%\",\n      },\n\n    title:{\n          \n    }\n}));\n\nfunction getColor(id){\n    if(id%5 === 0) return \"#FFEBCD\";\n    else if(id%5 === 1) return \"#54FF9F\";\n    else if(id%5 === 2) return \"#B0E2FF\";\n    else if(id%5 === 3) return \"#FEAB82\";\n    else return \"#FFF68F\"; \n}\n\nexport default function Project({id,mentors,url}) {\n\n  const classes = useStyles();\n  const [loading,setLoading] = useState(true);\n  const [info,setInfo] = useState({\n    projecttitle: \"\",\n    description: \"\",\n    lastUpdated: \"\",\n    contributors: \"\",\n  });\n\n  const modifiedurl = url.replace(\"github.com\",\"api.github.com/repos\");\n  \n  useEffect(()=>{\n    const fetch = ()=>{\n\n        axios.get(modifiedurl)\n        .then(({data})=>{\n            const modified_data = {\n                projecttitle: data.name,\n                description: (!data.description) ? \"----- No Description -----\" : data.description,\n                lastUpdated: data.updated_at,\n                contributors: data.contributors_url,\n            }\n\n            setInfo(modified_data);\n            setLoading(false);\n        })\n    }\n\n    fetch();\n\n  },[modifiedurl]);\n\n  if(loading)\n  {\n      return(\n        <Paper variant=\"outlined\" className={classes.paper}>\n            <Grid container spacing={2} justify=\"center\" alignItems=\"center\" style={{ height: '50vh', textAlign: \"center\" }}>\n                <Grid item>\n                    <CircularProgress size={50} />\n                </Grid>\n            </Grid>\n        </Paper>\n      )\n  }\n  else{\n    return (\n        <Paper variant=\"outlined\" className={classes.paper} style={{backgroundColor: getColor(id)}}>\n           <Grid container direction=\"column\" spacing={1}>\n               <Grid item container direction=\"row\">\n                    <IconButton href={url} aria-label=\"Github\" size=\"small\">\n                        <GitHub size=\"small\" />\n                    </IconButton>\n                    <Typography variant=\"h6\" color=\"textPrimary\" align=\"left\" style={{marginLeft:8}}>{info.projecttitle}</Typography>\n               </Grid>\n               <Grid item>\n                    <Typography variant=\"body2\" color=\"textSecondary\" align=\"left\" style={{height:\"40px\", overflow:\"hidden\",textOverflow:\"ellipsis\"}}>{info.description}</Typography>\n               </Grid>\n               <Grid item>\n                    <Typography variant=\"subtitle2\" color=\"textPrimary\" align=\"left\">{`Mentors: ${mentors}`}</Typography>\n               </Grid>\n               <Grid item>\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\" align=\"left\">{`Last Updated: ${moment(info.lastUpdated).fromNow()}`}</Typography>\n               </Grid>\n               <Grid item container direction=\"row-reverse\">\n                    <IconButton href={info.contributors.replace(\"api.github.com/repos\",\"github.com\")} aria-label=\"Contributors\" size=\"small\">\n                        <Group/>\n                    </IconButton>\n               </Grid>\n           </Grid>\n        </Paper>\n      );\n  }\n}\n","import React,{useEffect,useState} from 'react';\nimport {Grid,Grow,Container,CircularProgress} from '@material-ui/core';\nimport Project from '../components/Project';\nimport axios from 'axios';\n\nexport default function Projects() {\n\n  const [data,setData] = useState([]);\n  const [loading,setLoading] = useState(true);\n\n  useEffect(()=>{\n\n      const fetch = ()=>{\n        axios.get(\"https://script.google.com/macros/s/AKfycbw33V3utIboH-9H-S-dZj_zL25_CaHH4-1cyBz1IognJmONis9r/exec\")\n        .then(({data})=>{\n          setData(data.projects);\n          setLoading(false);\n        });\n      };\n\n      fetch();\n\n  },[]);\n\n\n  if(loading){\n    return(\n      <Grid container spacing={3} justify=\"center\" alignItems=\"center\" style={{ height: '100vh', textAlign: \"center\" }}>\n        <Grid item>\n          <CircularProgress size={100} />\n        </Grid>\n      </Grid>\n    )\n  }\n  else{\n    return (\n      <Container>\n        <Grow in>\n          <Grid container spacing={3}>\n            {\n                data.map((obj,index)=>{\n                  if(obj.project!==\"\")\n                  {\n                    return(\n                      <Grid key={index} item xs={12} sm={12} md={6}>\n                          <Project\n                            id={index}\n                            mentors={obj.mentors}\n                            url = {obj.url}\n                          />\n                      </Grid>\n                    )\n                  }\n                  else{\n                    return null;\n                  }\n                })\n            }\n          </Grid>\n        </Grow>\n      </Container>\n    );\n  }\n\n}\n","import React from 'react';\nimport { Link } from '@reach/router';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n    marginBottom: '1%',\n    '& a': {\n      color: 'inherit',\n      textDecoration: 'none',\n    },\n  },\n  menu: {\n    '& a': {\n      color: 'inherit',\n      textDecoration: 'none',\n    },\n  },\n\n  menuButton: {\n    paddingRight: theme.spacing(2),\n  },\n  title: {\n    marginLeft: 8,\n  },\n  logo: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      className={classes.menu}\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <Link to=\"/\">\n        <MenuItem>\n          <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n            <HomeIcon />\n          </IconButton>\n          <p>Home</p>\n        </MenuItem>\n      </Link>\n      <Link to=\"leaderboard\">\n        <MenuItem>\n          <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n            <AssessmentIcon />\n          </IconButton>\n          <p>Leaderboard</p>\n        </MenuItem>\n      </Link>\n      <Link to=\"projects\">\n        <MenuItem onClick={handleProfileMenuOpen}>\n          <IconButton\n            aria-label=\"account of current user\"\n            aria-controls=\"primary-search-account-menu\"\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n          >\n            <GitHubIcon />\n          </IconButton>\n          <p>Projects</p>\n        </MenuItem>\n      </Link>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Link to=\"/\">\n            <div className={classes.logo}>\n              <TimelineIcon />\n              <Typography className={classes.title} variant=\"h6\" noWrap>\n                Semester Long Projects\n              </Typography>\n            </div>\n          </Link>\n\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <Link to=\"/\">\n              <IconButton color=\"inherit\">\n                <Typography>Home</Typography>\n              </IconButton>\n            </Link>\n            <Link to=\"/leaderboard\">\n              <IconButton color=\"inherit\">\n                <Typography>Leaderboard</Typography>\n              </IconButton>\n            </Link>\n            <Link to=\"/projects\">\n              <IconButton edge=\"end\" color=\"inherit\">\n                <Typography>Projects</Typography>\n              </IconButton>\n            </Link>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n    </div>\n  );\n}\n","import React from 'react';\r\nimport { Router } from '@reach/router';\r\nimport Homepage from './Pages/HomePage';\r\nimport LeaderBoard from './Pages/LeaderBoard';\r\nimport Projects from './Pages/Projects';\r\nimport Navbar from './components/NavBar';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Router>\r\n        <Homepage path=\"/\" />\r\n        <LeaderBoard path=\"/leaderboard\" />\r\n        <Projects path=\"/projects\" />\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from \"./App\";\r\n\r\nReactDom.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}